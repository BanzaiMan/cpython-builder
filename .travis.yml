language: python

stages:
  - build
stage: build

jobs:
  include:
    - sudo: required
      language: minimal
      dist: xenial
      group: edge
      env: RELEASE=xenial
    - sudo: required
      services: docker
      dist: trusty
      env: RELEASE=trusty
      if: NOT env(VERSION) =~ -dev$ AND NOT env(VERSION) =~ ^3\.[789]
    - sudo: required
      dist: precise
      env: RELEASE=precise
      if: NOT env(VERSION) =~ -dev$ AND NOT env(VERSION) =~ ^pypy AND NOT env(VERSION) =~ ^3\.[789]

env:
  global:
  - VERSION=pypy3-dev
  - ALIAS=pypy3-nightly

install:
- pushd /opt/pyenv/
- sudo git checkout master
- sudo git pull
- popd
- python -m pip install virtualenv

before_script:
- 'export INSTALL_DEST=${INSTALL_DEST:-/opt/python}'
- 'export LSB_RELEASE=${LSB_RELEASE:-$(lsb_release -rs || echo ${$(sw_vers -productVersion)%*.*})}'
- 'export OS_NAME=${OS_NAME:-$(lsb_release -is | tr "A-Z" "a-z" || echo "osx")}'
- 'export ARCH=${ARCH:-$(uname -m)}'
# pipenv is supported for python 2.7 and 3.4 and higher.
- 'export PACKAGES=${PACKAGES:-pip nose pytest mock wheel pipenv}'
- export PYTHON_CONFIGURE_OPTS="--with-wide-unicode --enable-shared --enable-ipv6 --enable-loadable-sqlite-extensions --with-computed-gotos $CONFIGURE_OPTS"
- sudo chown -R $USER $HOME/.cache
- |
  if [[ $VERSION = pypy*-dev ]]; then
    if ! [[ -f ~/virtualenv/pypy/bin/activate ]]; then
      curl -O https://s3.amazonaws.com/travis-python-archives/binaries/ubuntu/$(lsb_release -rs)/x86_64/pypy2.7-5.9.0.tar.bz2
      sudo tar xf pypy*.tar.bz2 -C /
    fi
    source ~/virtualenv/pypy/bin/activate
    python --version
  fi
- __dots() { while true ; do echo -en . ; sleep 30 ; done } ; __dots &

script: ./bin/compile

after_success: ./bin/archive

after_failure: cat /tmp/python-build.*.log

addons:
  apt:
    packages:
      - openssl
  artifacts:
    paths:
    - $LSB_RELEASE/
    target_paths:
    - /binaries/$OS_NAME/$LSB_RELEASE/$ARCH
    branch:
    - default

notifications:
  email: false
